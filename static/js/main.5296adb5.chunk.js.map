{"version":3,"sources":["components/HourlyTemp.js","components/HourlyWind.js","components/Header.js","components/Weather.js","App.js","index.js"],"names":["HourlyTemp","props","state","hourlyTime","hTime","hourlyTemp","hTemp","nextProps","this","setState","id","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","options","scales","xAxes","gridLines","display","ticks","fontColor","yAxes","beginAtZero","tooltips","callbacks","tooltipItem","Number","yLabel","legend","title","text","fontSize","position","fontFamily","React","Component","HourlyWind","hourlyWindSpeed","hWindSpeed","bodyFontSize","Header","city","setKey","places","setCity","className","type","placeholder","map","place","index","key","data-key","onClick","e","Weather","userCity","isUserCity","locationKey","keys","localTime","temp","feelsTemp","hasPrec","isDay","pressure","pressureTendency","uvIndex","visibility","weatherText","wind","windDirection","bind","getCity","fetch","res","json","getLocationKey","console","log","length","o","EnglishName","AdministrativeArea","Country","Key","alert","mode","w","Temperature","Metric","Value","RealFeelTemperature","HasPrecipitation","IsDayTime","Pressure","PressureTendency","LocalizedText","UVIndex","Visibility","WeatherText","Wind","Speed","Direction","Degrees","LocalObservationDateTime","slice","replace","hour","parseInt","DateTime","Math","round","prevProps","prevState","getCurrentWeather","getHourlyWeather","document","getElementById","style","i","target","getAttribute","finalKey","value","time","hr","min","back","body","backgroundImage","alt","src","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5296adb5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\n\r\nclass HourlyTemp extends React.Component{\r\n constructor(props){\r\n   super(props)\r\n    this.state={\r\n      hourlyTime:props.hTime,\r\n      hourlyTemp:props.hTemp,\r\n    }\r\n }\r\n\r\n componentWillReceiveProps(nextProps) {\r\n  // This will erase any local state updates!\r\n  // Do not do this.\r\n  this.setState({ hourlyTime:nextProps.hTime,\r\n                  hourlyTemp:nextProps.hTemp});\r\n}\r\n \r\n      \r\n  \r\n  \r\n    render(){\r\n        return(\r\n          <div id=\"box3\">\r\n          <Line\r\n            data={{\r\n              labels:this.state.hourlyTime,\r\n              datasets: [\r\n                {\r\n                  label: '',\r\n                  fill:'start',\r\n                  lineTension: 0.5,\r\n                  backgroundColor: 'rgba(255,215,0,0.8)',\r\n                  borderColor: 'orange',\r\n                  borderWidth: 1,\r\n                  data:this.state.hourlyTemp,\r\n                }\r\n              ],\r\n            }\r\n            }\r\n              options={{\r\n                scales: {\r\n                     xAxes: [{\r\n                        gridLines: {\r\n                           display: false\r\n                        },\r\n                        \r\n                        ticks: {\r\n                          fontColor:'black',\r\n                       }\r\n                     }],\r\n                     yAxes: [{\r\n                        ticks: {\r\n                           beginAtZero: true, \r\n                           display:false\r\n                        },\r\n                        gridLines: {\r\n                           display: false\r\n                        }\r\n                     }]\r\n                    },\r\n                  tooltips:{\r\n                    callbacks: {\r\n                      label: function(tooltipItem) {\r\n                          return Number(tooltipItem.yLabel) + \" 'C\";\r\n                      }\r\n                  }\r\n                  },\r\n                  legend:{\r\n                    display:false\r\n                  },\r\n                  title:{\r\n                    text:\"Temperature\",\r\n                    display:true,\r\n                    fontSize:14,\r\n                    fontColor:\"purple\",\r\n                    position:'bottom',\r\n                    fontFamily:'helvetica',\r\n                  }\r\n              \r\n              }}\r\n               \r\n            \r\n          />\r\n        </div>\r\n        )}\r\n  }\r\nexport default HourlyTemp;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\n\r\nclass HourlyWind extends React.Component{\r\n constructor(props){\r\n   super(props)\r\n    this.state={\r\n      hourlyWindSpeed:props.hWindSpeed,\r\n      hourlyTime:props.hTime,\r\n    }\r\n }\r\n\r\n componentWillReceiveProps(nextProps) {\r\n  // This will erase any local state updates!\r\n  // Do not do this.\r\n  this.setState({ hourlyTime:nextProps.hTime,\r\n                  hourlyWindSpeed:nextProps.hWindSpeed});\r\n}\r\n \r\n      \r\n  \r\n  \r\n    render(){\r\n        return(\r\n         \r\n          <Line\r\n            data={{\r\n              labels:this.state.hourlyTime,\r\n              datasets: [\r\n                {\r\n                  label: 'Wind Speed',\r\n                  fill:'start',\r\n                  lineTension: 0.5,\r\n                  backgroundColor: '#19d9fd',\r\n                  borderColor: 'blue',\r\n                  borderWidth: 2,\r\n                  data:this.state.hourlyWindSpeed,\r\n                }\r\n              ],\r\n            }\r\n            }\r\n              options={{\r\n                scales: {\r\n                     xAxes: [{\r\n                        gridLines: {\r\n                           display: false\r\n                        },\r\n                        ticks: {\r\n                          fontColor:'black',\r\n                       },\r\n                        \r\n                     }],\r\n                     yAxes: [{\r\n                        ticks: {\r\n                           beginAtZero: true, \r\n                           display:false\r\n                        },\r\n                        gridLines: {\r\n                           display: false\r\n                        }\r\n                     }]\r\n                    },\r\n                  tooltips:{\r\n                    callbacks: {\r\n                      label: function(tooltipItem) {\r\n                          return Number(tooltipItem.yLabel) + \" mi/h\";\r\n                      }\r\n                  },\r\n                  bodyFontSize: 20,\r\n                  },\r\n                  legend:{\r\n                    display:false\r\n                  },\r\n                  title:{\r\n                    text:\"Wind Speed\",\r\n                    display:true,\r\n                    fontSize:14,\r\n                    fontColor:\"purple\",\r\n                    position:'bottom',\r\n                    fontFamily:'helvetica',\r\n                  }\r\n              \r\n              }}\r\n               \r\n            \r\n          />\r\n        \r\n        )}\r\n  }\r\nexport default HourlyWind;\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Header({city,setKey,places,setCity}){\r\n\r\n    return(\r\n        <header>\r\n            <p id=\"title\">Weather App</p>\r\n            <div className=\"search-form\">\r\n            <input type=\"text\" id=\"search-city\"\r\n            placeholder={city}/>\r\n            <div id=\"cities-list\">\r\n                {places.map((place,index)=>\r\n                    <button key={index} data-key={index} onClick={(e)=>{setKey(e)}}>{place}</button>\r\n                )}\r\n                  \r\n             </div>\r\n\r\n            <i onClick={setCity} className=\"fas fa-arrow-alt-circle-right\"></i>\r\n            </div>\r\n             \r\n            </header>\r\n    )\r\n};\r\n\r\n","import React from 'react'\r\nimport HourlyTemp from './HourlyTemp'\r\nimport HourlyWind from './HourlyWind'\r\nimport Header from './Header'\r\n\r\nclass Weather extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userCity: \"\",\r\n            isUserCity:false,\r\n            locationKey:\"\",\r\n            places:[\"London,London,United Kingdom\",\"London,Ontario,Canada\",\"London,Ohio,United States\",\r\n            \"LondonLine Islands,Kiribati\",\"London,California,United States\",\"London,Svalbard,Svalbard And Jan Mayen\"],\r\n            keys:[\"328328\", \"55489\", \"333298\", \"335012\", \"1123888\",\"453443\"],\r\n            \r\n            // current weather conditions\r\n                localTime:\"2021-01-14T23:20\",\r\n                temp:\"2\",\r\n                feelsTemp:\"1\",\r\n                hasPrec:false,\r\n                isDay:false,\r\n                pressure:\"3\",\r\n                pressureTendency:\"falling\",\r\n                uvIndex:\"0\",\r\n                visibility:\"1\",\r\n                weatherText:\"Mostly cloudy\",\r\n                wind:\"23\",\r\n                windDirection:\"360\",\r\n\r\n            // hourly weather conditions in arrays\r\n                hourlyTime: ['1pm','2pm','3pm','4pm','5pm','6pm','7pm','8pm'],\r\n                hourlyWindSpeed:[3,2,5,1,3,2,3,5],\r\n                hourlyTemp:[-1,-2,0,1,4,0,-1,3,2],\r\n                \r\n        }\r\n        this.setKey = this.setKey.bind(this);\r\n        this.setCity = this.setCity.bind(this);\r\n        }\r\n\r\n    componentDidMount(){\r\n       this.getCity()\r\n        \r\n    }\r\n\r\n    async getCity (){\r\n        const res = await fetch(\"https://geolocation-db.com/json/85249190-4601-11eb-9067-21b51bc8dee3\")\r\n        const data = await res.json();\r\n        this.setState({\r\n            userCity: data.city,\r\n            isUserCity:true,\r\n        },()=>{\r\n            this.getLocationKey();\r\n        })\r\n    \r\n     }      \r\n\r\n     async getLocationKey(){\r\n        const res = await fetch(`https://dataservice.accuweather.com/locations/v1/cities/search?apikey=tYgqPzMGuVb2X0eBKTeMDLAODRNzpD8x&q=${this.state.userCity}`)\r\n        const data = await res.json();\r\n        console.log(data)\r\n        if(data.length!==0){\r\n        this.setState({\r\n            places:data.map(o=>o.EnglishName+\",\"+o.AdministrativeArea.EnglishName+\",\"+o.Country.EnglishName),\r\n            keys:data.map(o=>o.Key),\r\n        })\r\n        if(this.state.isUserCity){\r\n            this.setState({\r\n                locationKey:this.state.keys[0],\r\n                isUserCity:false\r\n            })}\r\n    }\r\n    else{\r\n        alert(\"Please enter a valid name\")\r\n    }\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n    async getCurrentWeather(){\r\n        const res = await fetch(`https://dataservice.accuweather.com/currentconditions/v1/${this.state.locationKey}?apikey=tYgqPzMGuVb2X0eBKTeMDLAODRNzpD8x&details=true`,{mode:'cors'})\r\n        const data = await res.json();\r\n        const w = data[0];\r\n        console.log(w)\r\n        this.setState({\r\n                temp:w.Temperature.Metric.Value,\r\n                feelsTemp:w.RealFeelTemperature.Metric.Value,\r\n                hasPrec:w.HasPrecipitation,\r\n                isDay:w.IsDayTime,\r\n                pressure:w.Pressure.Metric.Value,\r\n                pressureTendency:w.PressureTendency.LocalizedText,\r\n                uvIndex:w.UVIndex,\r\n                visibility:w.Visibility.Metric.Value,\r\n                weatherText:w.WeatherText,\r\n                wind:w.Wind.Speed.Metric.Value,\r\n                windDirection:w.Wind.Direction.Degrees,\r\n                localTime:w.LocalObservationDateTime.slice(0,16).replace(\"T\",\" \"),\r\n        })\r\n    }\r\n     \r\n    async getHourlyWeather(){\r\n        \r\n        const res = await fetch(`https://dataservice.accuweather.com/forecasts/v1/hourly/12hour/${this.state.locationKey}?apikey=tYgqPzMGuVb2X0eBKTeMDLAODRNzpD8x&details=true`)\r\n        const data = await res.json();\r\n        console.log(data)\r\n        if(data.length!==0){\r\n        this.setState({\r\n      \r\n        hourlyTime: data.map(o=>{\r\n        const hour = parseInt(o.DateTime.slice(11,13))\r\n        if(hour<=12){\r\n          return hour+\"am\"\r\n        }\r\n        else{\r\n          return hour-12+\"pm\"\r\n        }\r\n      }\r\n        ),\r\n      hourlyWindSpeed:data.map(o=>o.Wind.Speed.Value),\r\n\r\n      hourlyTemp:data.map(o=>{\r\n        let temp = parseInt(o.Temperature.Value)\r\n        return Math.round(((temp-32)*5)/9);\r\n      })\r\n         // converting to celsius\r\n      })\r\n      }\r\n      }\r\n      \r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        \r\n        if(this.state.locationKey !== prevState.locationKey){\r\n            this.getCurrentWeather();\r\n            this.getHourlyWeather();\r\n        }\r\n      }\r\n    \r\n\r\n    \r\n      setKey(e){\r\n        document.getElementById(\"cities-list\").style.display=\"none\"\r\n\r\n          let i = e.target.getAttribute('data-key')\r\n          console.log(i)\r\n          let finalKey = this.state.keys[i]\r\n          this.setState({\r\n              locationKey:finalKey\r\n         })\r\n\r\n      }\r\n\r\n      setCity(){\r\n        const cList = document.getElementById(\"cities-list\")\r\n        cList.style.display=\"block\"\r\n          this.setState({\r\n              userCity:document.getElementById(\"search-city\").value,\r\n              places:[]\r\n          },()=>{\r\n              this.getLocationKey()\r\n          })\r\n      }\r\n    render(){\r\n        let time = this.state.localTime.slice(11);\r\n        \r\n            const hr = parseInt(time.slice(0,2));\r\n            const min = time.slice(3);\r\n                if(hr<=12) time = hr+\":\"+min+\" am\"\r\n                  \r\n                else \r\n                time = hr-12+\":\"+min+\" pm\"\r\n\r\n        \r\n        const back = this.state.isDay ? \"https://livewire.org.au/wp-content/uploads/2019/01/sunny-day.jpg\" \r\n        : \"https://www.awarenessdays.com/wp-content/uploads/2018/07/astro.png\"\r\n        document.body.style.backgroundImage = `url(${back})`;\r\n\r\n    return (\r\n        <div>\r\n        <Header city={this.state.userCity} setKey={this.setKey} places={this.state.places}\r\n            setCity={this.setCity}/>\r\n\r\n        <div id=\"main-container\">\r\n            \r\n            <div id=\"inner-container\">\r\n\r\n            <div id=\"box1\">\r\n            <p id=\"temp-value\">{this.state.temp}<sup style={{fontSize:18+\"px\"}}>o</sup>C</p>\r\n            <p className=\"other-info\">feels like- <span className=\"val-color\">{this.state.feelsTemp}<sup style={{fontSize:18+\"px\"}}>o</sup>C</span></p>\r\n            <span className=\"other-info\">Pressure- <span className=\"val-color\">{this.state.pressure}mb </span></span>\r\n            {this.state.pressureTendency===\"falling\" && <i className=\"val-color fas fa-arrow-down\"></i>}\r\n            {this.state.pressureTendency===\"rising\" && <i className=\" val-color fas fa-arrow-up\"></i>}\r\n\r\n            <p className=\"other-info\">UV Index- <span className=\"val-color\">{this.state.uvIndex}</span></p>\r\n\r\n            <p className=\"other-info\">Visibilty- <span className=\"val-color\">{this.state.visibility}km</span></p>\r\n            <p className=\"other-info\">Wind- <span className=\"val-color\">{this.state.wind}km/h at {this.state.windDirection}<sup>o</sup></span></p>\r\n            \r\n            </div>\r\n\r\n            \r\n            <div id=\"box2\">\r\n            <p id=\"weather-text\">{this.state.weatherText}</p>\r\n            {(this.state.hasPrec && this.state.isDay && <i className=\"s fas fa-cloud-sun-rain\"></i>) ||\r\n            (!this.state.hasPrec && this.state.isDay && (this.state.weatherText===\"Cloudy\" ||this.state.weatherText===\"Mostly cloudy\") && <i className=\"s fas fa-cloud-sun\"></i>)||\r\n            (this.state.hasPrec && !this.state.isDay && <i className=\"s fas fa-cloud-moon-rain\"></i>)||\r\n            (!this.state.hasPrec && !this.state.isDay && <i className=\"s fas fa-moon\"></i>)||\r\n            (!this.state.hasPrec && this.state.isDay && <i className=\"s fas fa-sun\"></i>)}\r\n            </div>\r\n\r\n            \r\n            <div id=\"box3\">\r\n            \r\n            <HourlyTemp hTemp={this.state.hourlyTemp}\r\n                        hTime={this.state.hourlyTime}/>\r\n            </div>\r\n\r\n            \r\n            <div id=\"box4\">\r\n            <HourlyWind hTime={this.state.hourlyTime}\r\n                        hWindSpeed={this.state.hourlyWindSpeed}/> \r\n            </div>\r\n\r\n            \r\n            </div>\r\n\r\n            <div id=\"time-source\">\r\n            <p id=\"observation-time\">Observed at {time}</p>\r\n            <p id=\"source-logo\">Data taken from \r\n            <img alt=\"accuweather\" src=\"https://dl.dropbox.com/s/w1tn1chsknn04l9/AW_REGISTERED_Horiz_JPEG_Logo.jpg?dl=0\"></img></p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Weather;","import React from 'react'\r\nimport './App.css'\r\nimport Weather from './components/Weather'\r\n\r\nconst App = () =>{\r\n    return(\r\n        <div>          \r\n            <Weather/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}